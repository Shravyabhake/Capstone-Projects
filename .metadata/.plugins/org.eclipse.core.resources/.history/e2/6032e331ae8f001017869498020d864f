package com.RestapiProject;

import org.testng.Assert;
import org.testng.annotations.Test;
import io.restassured.response.Response;
import static io.restassured.RestAssured.*;

public class TelecomP {

    private static String userEmail;
    private static String userPassword = "myPassword";
    private static String authToken;
    private static String contactId;

    @Test(priority = 1)
    public void registerUser() {
        userEmail = "testing" + System.currentTimeMillis() + "@test.com";

        String requestBody = "{ \"firstName\": \"Test\", \"lastName\": \"User\", \"email\": \"" + userEmail + "\", \"password\": \"" + userPassword + "\" }";

        Response res = given()
                .contentType("application/json")
                .body(requestBody)
                .when()
                .post("/users/register");

        System.out.println("\n===== Register User Response =====");
        System.out.println(res.asString());

        Assert.assertEquals(res.statusCode(), 201);
        authToken = res.jsonPath().getString("token");
    }

    @Test(priority = 2)
    public void getUserProfile() {
        Response res = given()
                .header("Authorization", "Bearer " + authToken)
                .when()
                .get("/users/me");

        System.out.println("\n===== Get User Profile Response =====");
        System.out.println(res.asString());

        Assert.assertEquals(res.statusCode(), 200);
    }

    @Test(priority = 3)
    public void updateUser() {
        userEmail = "updated" + System.currentTimeMillis() + "@test.com";
        userPassword = "myNewPassword";

        String requestBody = "{ \"firstName\": \"Updated\", \"lastName\": \"Username\", \"email\": \"" + userEmail + "\", \"password\": \"" + userPassword + "\" }";

        Response res = given()
                .header("Authorization", "Bearer " + authToken)
                .contentType("application/json")
                .body(requestBody)
                .when()
                .put("/users/me");

        System.out.println("\n===== Update User Response =====");
        System.out.println(res.asString());

        Assert.assertEquals(res.statusCode(), 200);
    }

    @Test(priority = 4)
    public void loginUser() {
        String requestBody = "{ \"email\": \"" + userEmail + "\", \"password\": \"" + userPassword + "\" }";

        Response res = given()
                .contentType("application/json")
                .body(requestBody)
                .when()
                .post("/users/login");

        System.out.println("\n===== Login User Response =====");
        System.out.println(res.asString());

        Assert.assertEquals(res.statusCode(), 200);
        authToken = res.jsonPath().getString("token");
    }

    @Test(priority = 5)
    public void addContact() {
        String requestBody = "{ \"firstName\": \"John\", \"lastName\": \"Doe\", \"email\": \"jdoe" + System.currentTimeMillis() + "@fake.com\", \"phone\": \"8005555555\", \"city\": \"Anytown\", \"country\": \"USA\" }";

        Response res = given()
                .header("Authorization", "Bearer " + authToken)
                .contentType("application/json")
                .body(requestBody)
                .when()
                .post("/contacts");

        System.out.println("\n===== Add Contact Response =====");
        System.out.println(res.asString());

        Assert.assertEquals(res.statusCode(), 201);
        contactId = res.jsonPath().getString("_id");
    }

    @Test(priority = 6)
    public void getContactList() {
        Response res = given()
                .header("Authorization", "Bearer " + authToken)
                .when()
                .get("/contacts");

        System.out.println("\n===== Get Contact List Response =====");
        System.out.println(res.asString());

        Assert.assertEquals(res.statusCode(), 200);
    }

    @Test(priority = 7)
    public void getContactById() {
        Response res = given()
                .header("Authorization", "Bearer " + authToken)
                .when()
                .get("/contacts/" + contactId);

        System.out.println("\n===== Get Contact By ID Response =====");
        System.out.println(res.asString());

        Assert.assertEquals(res.statusCode(), 200);
    }

    @Test(priority = 8)
    public void updateContact() {
        String requestBody = "{ \"firstName\": \"Amy\", \"lastName\": \"Miller\", \"email\": \"amiller" + System.currentTimeMillis() + "@fake.com\", \"phone\": \"8005554242\", \"city\": \"Washington\", \"country\": \"Canada\" }";

        Response res = given()
                .header("Authorization", "Bearer " + authToken)
                .contentType("application/json")
                .body(requestBody)
                .when()
                .put("/contacts/" + contactId);

        System.out.println("\n===== Update Contact Response =====");
        System.out.println(res.asString());

        Assert.assertEquals(res.statusCode(), 200);
    }

    @Test(priority = 9)
    public void patchContact() {
        String requestBody = "{ \"firstName\": \"Anna\" }";

        Response res = given()
                .header("Authorization", "Bearer " + authToken)
                .contentType("application/json")
                .body(requestBody)
                .when()
                .patch("/contacts/" + contactId);

        System.out.println("\n===== Patch Contact Response =====");
        System.out.println(res.asString());

        Assert.assertEquals(res.statusCode(), 200);
    }

    @Test(priority = 10)
    public void deleteContact() {
        Response res = given()
                .header("Authorization", "Bearer " + authToken)
                .when()
                .delete("/contacts/" + contactId);

        System.out.println("\n===== Delete Contact Response =====");
        System.out.println(res.asString());

        Assert.assertEquals(res.statusCode(), 200);
    }
}
