package com.orangehrm; 
import java.io.File; 
import java.io.FileInputStream; 
import java.io.IOException; 
import java.time.Duration; 
import org.apache.poi.xssf.usermodel.XSSFCell; 
import org.apache.poi.xssf.usermodel.XSSFRow; 
import org.apache.poi.xssf.usermodel.XSSFSheet; 
import org.apache.poi.xssf.usermodel.XSSFWorkbook; 
import org.openqa.selenium.By; 
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
//import org.testng.Assert; 
import org.testng.annotations.AfterMethod; 
import org.testng.annotations.AfterTest;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.BeforeTest; 
import org.testng.annotations.DataProvider; 
import org.testng.annotations.Test; 
import com.aventstack.extentreports.ExtentReports; 
import com.aventstack.extentreports.ExtentTest; 
import com.aventstack.extentreports.Status; 
import 
com.aventstack.extentreports.markuputils.ExtentColor; 
import 
com.aventstack.extentreports.markuputils.MarkupHelper; 
import 
com.aventstack.extentreports.reporter.ExtentSparkReporter; 
import 
com.aventstack.extentreports.reporter.configuration.Theme; 
import utility.Utility; 


public class LoginorhmTest { 
	
	
public static WebDriver driver; 
		String fpath = "C:\\Users\\shrav\\OneDrive\\Desktop\\LoginData.xlsx"; 
		File file; 
		FileInputStream fis; 
		XSSFWorkbook wb; 
		XSSFSheet sheet; 
		XSSFRow row; 
		XSSFCell cell; 
		ExtentSparkReporter htmlreport; 
		ExtentReports report; 
		ExtentTest test; 
		String extentreportpath = System.getProperty("user.dir") 
+ "\\Reports\\OHRM_Login_Report.html"; 
		
		
		@BeforeMethod
		public void setUp() throws IOException {
		    file = new File(fpath);
		    fis = new FileInputStream(file);
		    wb = new XSSFWorkbook(fis);
		    sheet = wb.getSheetAt(0);

		    driver = new ChromeDriver();
		    driver.manage().window().maximize();
		    driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(20));
		    driver.get("https://opensource-demo.orangehrmlive.com/web/index.php/auth/login");
		}
		
		@BeforeTest 
		public void beforeTest() throws IOException { 
		

					// Extent Report initialization 
		htmlreport = new ExtentSparkReporter(extentreportpath); 
		report = new ExtentReports(); 
		report.attachReporter(htmlreport); 


					// setting environment for Extent report 
		report.setSystemInfo("Machine name:", "HP"); 
		report.setSystemInfo("Tester name:", "Rajalakshmi"); 
		report.setSystemInfo("OS", "Windows 11"); 
		report.setSystemInfo("Browser", "Google Chrome"); 


				// Configuration of the report 
		htmlreport.config().setDocumentTitle("OHRM_Login_Report"); 
		htmlreport.config().setReportName("OHRM_Login_Details"); 
		htmlreport.config().setTheme(Theme.STANDARD); 
		htmlreport.config().setTimeStampFormat("EEEE MM DD,yyyy HH:mm:ss"); 
		} 

		
		
		@Test(dataProvider = "loginData")
		public void Ohrmlogin(String un, String ps) throws InterruptedException {
		    test = report.createTest("Login with Username: " + un);

		    driver.findElement(By.name("username")).sendKeys(un);
		    driver.findElement(By.name("password")).sendKeys(ps);
		    driver.findElement(By.xpath("//button[@type='submit']")).click();

		    Thread.sleep(3000);

		    String currentUrl = driver.getCurrentUrl();

		    if (currentUrl.contains("dashboard")) {
		        Utility.getScreenshot(driver);

		        test.log(Status.PASS, MarkupHelper.createLabel("OHRM Login:Pass", ExtentColor.GREEN));
		        System.out.println("Login successful for: " + un);
		        // logout
		        driver.findElement(By.cssSelector("i.oxd-icon.bi-caret-down-fill.oxd-userdropdown-icon")).click();
		        driver.findElement(By.linkText("Logout")).click();
		    } else {
		        Utility.getScreenshot(driver);

		        test.log(Status.FAIL, MarkupHelper.createLabel("OHRM Login:Fail", ExtentColor.RED));
		        System.out.println("Login failed for: " + un);
		    }
		}
		@AfterMethod
		public void tearDown() throws Exception {
		    Utility.getScreenshot(driver);
		    driver.quit();
		}

@DataProvider 
public Object[][] loginData() { 
	int totalrows = sheet.getPhysicalNumberOfRows(); 
	String[][] logindata = new String[totalrows - 1][2]; 
		for (int i = 0; i < totalrows - 1; i++) { 
				row = sheet.getRow(i + 1); 
				for (int j = 0; j < 2; j++) { 
						cell = row.getCell(j); 
						logindata[i][j] = cell.getStringCellValue(); 
} 
} 
			return logindata; 
} 




@AfterTest 
public void afterTest() throws IOException { 
wb.close(); 
fis.close(); 
report.flush(); 

}
}